(saveFormat "7.0")
(date "Sun 29/Feb/2004 23:33:47 ")
(veerev "7.0.6227.0")
(platform "PC")
(execMode v6)
(prefExecMode v9)
(filterNAN 0)
(workspaceStackingOrder M)
(SaveCF no)
(device 0 ROOTCONTEXT
(assemblyRefs
(assemblyRef 1
(displayName
"mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
)
(filename "C:\\WINDOWS\\Microsoft.NET\\Framework\\v1.1.4322\\mscorlib.dll"))
(selectedNamespaces "System,System.Text,System.Security.Cryptography,"))
(properties
(trigMode deg)
(nextID 21)
(popupTitleText "Untitled")
(popupMoveable 1))
(deviceList
(device 0 RECCONST
(properties
(name "Record"))
(interface
(output 1
(name "Record")
(lock name constraints)))
(implementation
(value Record
(schema
(numFields 4)
(fieldName "Test"
(type Text))
(fieldName "Hi"
(type Real64))
(fieldName "Lo"
(type Real64))
(fieldName "Avg"
(type Real64)))
(data 
(record
("Test" "Text field")
("Hi" 5.06)
("Lo" 4.78)
("Avg" 4.92))))))
(device 1 FORMULA
(properties
(name "CreateInstance SHA1CryptoServiceProvider")
(expr 2 "Set sHA1 = CreateInstance(\"mscorlib\", "
"    \"System.Security.Cryptography.SHA1CryptoServiceProvider\" );"))
(interface
(output 1
(name "sHA1")
(optional yes))
(output 2
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 2 FORMULA
(properties
(name "sHA1Managed.ComputeHash(buffer);")
(expr 2 "buffer = Encoding.Unicode.GetBytes(asClrType(text, System.String));"
"sHA1.ComputeHash(buffer);"))
(interface
(input 1
(name "sHA1")
(optional yes))
(input 2
(name "text")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))
(output 2
(name "buffer")
(optional yes))))
(device 3 TOSTRING
(properties
(transactions 1 "WRITE TEXT a EOL"))
(interface
(input 1
(name "a")
(optional yes))
(output 1
(name "result")
(lock name constraints)))
(implementation
(attr iopath string write "string"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 4 TEXTDISPLAY
(interface
(input 1
(name "Data"))))
(device 6 TOFILE
(properties
(transactions 2 "WRITE CONTAINER record" "WRITE CONTAINER hash"))
(interface
(input 1
(name "record")
(optional yes))
(input 2
(name "hash")
(optional yes))
(input 3
(type control)
(name "File Name")
(requires
(datatype Text)
(shape "Scalar"))
(lock name constraints)
(optional yes)))
(implementation
(attr iopath file write "C:\\Temp\\RecordWithHash.dat"
(readTerm "\n")
(fs "\r\n")
(eol "\r\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 8 FORMULA
(properties
(name "FileName")
(expr 1 "getenv(\"TEMP\")+\"\\\\RecordWithHash.dat\""))
(interface
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 9 FROMFILE
(properties
(transactions 2 "READ CONTAINER record" "READ CONTAINER hash"))
(interface
(input 1
(type control)
(name "File Name")
(requires
(datatype Text)
(shape "Scalar"))
(lock name constraints)
(optional yes))
(output 1
(name "record")
(optional yes))
(output 2
(name "hash")
(optional yes)))
(implementation
(attr iopath file read "C:\\Temp\\RecordWithHash.dat"
(readTerm "\n")
(fs "\r\n")
(eol "\r\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 11 TOSTRING
(properties
(transactions 1 "WRITE TEXT a EOL"))
(interface
(input 1
(name "a")
(optional yes))
(output 1
(name "result")
(lock name constraints)))
(implementation
(attr iopath string write "string"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 12 FORMULA
(properties
(name "sHA1Managed.ComputeHash(buffer);")
(expr 2 "buffer = Encoding.Unicode.GetBytes(asClrType(text, System.String));"
"sHA1.ComputeHash(buffer);"))
(interface
(input 1
(name "sHA1")
(optional yes))
(input 2
(name "text")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))
(output 2
(name "buffer")
(optional yes))))
(device 14 IFTHENELSE
(properties
(name "Hashes == ?")
(cases 1 "A==B"))
(interface
(input 1
(name "A")
(optional yes))
(input 2
(name "B")
(optional yes))
(output 1
(name "Then")
(lock name constraints))
(output 2
(name "Else")
(lock name constraints))))
(device 15 RECCONST
(properties
(name "Record"))
(interface
(input 1
(type control)
(name "Default Value")
(requires
(datatype Record))
(lock name constraints)
(optional yes))
(output 1
(name "Record")
(lock name constraints)))
(implementation
(value Record
(schema
(numFields 4)
(fieldName "Test"
(type Text))
(fieldName "Hi"
(type Real64))
(fieldName "Lo"
(type Real64))
(fieldName "Avg"
(type Real64)))
(data 
(record
("Test" "Text field")
("Hi" 5.06)
("Lo" 4.78)
("Avg" 4.92))))))
(device 16 ESCAPE
(properties
(errorCode 1)
(message "File has been corrupted")))
(device 17 MESSAGEBOX
(properties
(name "MessageBox")
(popupTitle "ComputingHash")
(message "Hash Verified - File Not Corrupt")
(symbol Information))
(interface
(output 1
(name "OK")
(lock name constraints)))
(implementation
(customButtons 0)
(displayMode 3)
(buttons "OK")
(buttonLabel1 "OK")
(buttonLabel2 "")
(buttonLabel3 "")
(bdefault "OK")))
(device 18 NOTE
(properties
(name "Warranty Disclaimer")
(text2 4 "This example is provided as an"
"illustration \"as is\", and Keysight Technologies"
"makes no warranty of any kind" "with regard to this example.")))
(device 19 NOTE
(properties
(name "README")
(text2 1
"{\\rtf1\\ansi\\ansicpg1252\\deff0{\\fonttbl{\\f0\\fnil\\fcharset0 Times New Roman;}{\\f1\\froman\\fprq2\\fcharset0 Times New Roman;}{\\f2\\fnil\\fcharset0 Microsoft Sans Serif;}}\r\n{\\colortbl ;\\red0\\green0\\blue0;}\r\n\\viewkind4\\uc1\\pard\\cf1\\lang1033\\ul\\b\\f0\\fs24 Compute Hash Using System.Security.Cryptography Namespace\\par\r\n\\cf0\\ulnone\\b0\\f1\\par\r\nThis example demonstrates how to compute a hash of the contents of a VEE record.  The VEE record and the hash are saved out to a file.  The file is then re-read.  The hash is recomputed on the record that is extracted from the file and then compared to the hash stored in the file.  This is a simple way to verify the contents of the file are intact.  For a primer on the security classes in .NET go to http://msdn.microsoft.com/security/securecode/dotnet/default.aspx?pull=/library/en-us/dnnetsec/html/cryptosimplified.asp.\\par\r\n\\par\r\nNote that the System.Text and System.Security.Cryptography namespaces are imported.  \\b\\par\r\n\\par\r\nAssemblies\\b0 : Mscorlib\\par\r\n\\b Namespaces\\b0 : System, System.Text, System.Security.Cryptography\\par\r\n\\b Classes\\b0 : System.Security.Cryptography.SHA1CryptoServiceProvider, System.Text.Encoding\\f2\\fs17\\par\r\n}\r\n"
)))
(configuration
(connect D1:1 D2:1)
(connect D3:1 D2:2)
(connect D0:1 D3:1)
(connect D2:1 D4:1)
(connect D6:0 D5:0)
(connect D0:1 D5:1)
(connect D2:1 D5:2)
(connect D6:1 D5:3)
(connect D5:0 D7:0)
(connect D6:1 D7:1)
(connect D7:1 D8:1)
(connect D7:0 D9:0)
(connect D1:1 D9:1)
(connect D8:1 D9:2)
(connect D7:2 D10:1)
(connect D9:1 D10:2)
(connect D7:1 D11:1)
(connect D10:2 D12:0)
(connect D10:1 D13:0)))
(contextCarrier
(wndRestoredOrigin 2 2)
(wndRestoredExtent 1133 803)
(wndState max)
(active detail)
(detail
(extent 1145 927)
(anchorPt 191 -20)
(configuration
(devCarrierFor 0
(active open)
(icon)
(open
(extent 171 174)
(formatters))
(pinCenter 130 220))
(devCarrierFor 1
(active open)
(icon
(extent 261 25))
(open
(extent 424 66))
(terminals on)
(pinCenter 640 80))
(devCarrierFor 2
(active open)
(icon
(extent 227 0))
(open
(extent 404 76))
(terminals on)
(pinCenter 650 220))
(devCarrierFor 3
(active icon)
(icon
(extent 53 15))
(open
(extent 229 74))
(terminals on)
(pinCenter 280 240))
(devCarrierFor 4
(active open)
(icon)
(open
(extent 134 166))
(pinCenter 1020 200))
(devCarrierFor 6
(active open)
(icon)
(open
(extent 231 127))
(terminals on)
(pinCenter 640 390))
(devCarrierFor 8
(active icon)
(icon
(extent 59 15))
(open
(extent 254 46))
(terminals on)
(pinCenter 340 430))
(devCarrierFor 9
(active open)
(icon)
(open
(extent 231 108))
(terminals on)
(pinCenter 630 560))
(devCarrierFor 11
(active icon)
(icon
(extent 53 15))
(open
(extent 229 74))
(terminals on)
(pinCenter 290 740))
(devCarrierFor 12
(active open)
(icon
(extent 227 0))
(open
(extent 404 76))
(terminals on)
(pinCenter 650 720))
(devCarrierFor 14
(active icon)
(icon
(extent 78 25))
(open
(extent 55 51))
(terminals on)
(pinCenter 1000 690))
(devCarrierFor 15
(active open)
(icon)
(open
(extent 204 166)
(formatters))
(pinCenter 1030 530))
(devCarrierFor 16
(active icon)
(icon
(extent 69 15))
(open
(extent 211 55))
(pinCenter 1070 760))
(devCarrierFor 17
(active icon)
(icon
(extent 78 15))
(open
(extent 219 126))
(terminals on)
(pinCenter 1140 720))
(devCarrierFor 18
(active icon)
(icon
(extent 338 48)
(iconImage "disclaim.gif")
(label off))
(open
(extent 397 82)
(editing disabled))
(pinCenter 10 830))
(devCarrierFor 19
(active open)
(icon
(extent 68 51)
(iconImage "notepad.icn"))
(open
(extent 414 446)
(editing disabled))
(pinCenter 30 570))
(connect D1:1 D2:1
(points 6 904 60 920 60 920 140 380 140 380 200 395 200))
(connect D3:1 D2:2
(points 2 309 240 395 240))
(connect D0:1 D3:1
(points 4 218 220 230 220 230 240 251 240))
(connect D2:1 D4:1
(points 2 904 200 950 200))
(connect D6:0 D5:0
(points 6 340 440 340 460 400 460 400 290 620 290 620 306))
(connect D0:1 D5:1
(points 6 218 220 230 220 230 270 260 270 260 350 452 350))
(connect D2:1 D5:2
(points 6 904 200 920 200 920 280 430 280 430 390 452 390))
(connect D6:1 D5:3
(points 2 372 430 452 430))
(connect D5:0 D7:0
(points 2 620 456 620 485))
(connect D6:1 D7:1
(points 4 372 430 390 430 390 560 442 560))
(connect D7:1 D8:1
(points 8 798 530 820 530 820 640 380 640 380 710 250 710 250 740 261 740))
(connect D7:0 D9:0
(points 4 620 616 620 630 650 630 650 661))
(connect D1:1 D9:1
(points 10 904 60 920 60 920 140 380 140 380 200 370 200 370 270 290 270 290 700
395 700))
(connect D8:1 D9:2
(points 2 319 740 395 740))
(connect D7:2 D10:1
(points 6 798 590 830 590 830 640 920 640 920 680 958 680))
(connect D9:1 D10:2
(points 2 904 700 958 700))
(connect D7:1 D11:1
(points 2 798 530 925 530))
(connect D10:2 D12:0
(points 3 1041 700 1070 700 1070 750))
(connect D10:1 D13:0
(points 3 1041 680 1140 680 1140 710)))
(stackingOrder 3 5 6 4 7 11 10 8 12 13 2 9 1 0 15 14))
(numberFormats
(realFormat standard)
(realSigDigits 4)
(realRadixSpec 4)
(integerBase decimal))))
