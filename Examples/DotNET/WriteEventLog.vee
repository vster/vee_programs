(saveFormat "7.0")
(date "Wed 06/Apr/2005 18:00:04 ")
(veerev "7.5.7606.0 Beta - A")
(platform "PC")
(execMode v6)
(prefExecMode v9)
(filterNAN 0)
(workspaceStackingOrder M)
(SaveCF no)
(device 0 ROOTCONTEXT
(assemblyRefs
(assemblyRef 1
(displayName
"mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
)
(filename "C:\\WINDOWS\\Microsoft.NET\\Framework\\v1.1.4322\\mscorlib.dll"))
(assemblyRef 2
(displayName
"System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")
(filename "C:\\WINDOWS\\Microsoft.NET\\Framework\\v1.1.4322\\System.dll"))
(selectedNamespaces "System.Diagnostics,"))
(properties
(trigMode deg)
(nextID 21)
(popupTitleText "Untitled")
(popupMoveable 1)
(deleteGlobals 0))
(deviceList
(device 0 DOTNETBUILDER
(properties
(name "System.Diagnostics.EventLog")
(description2 1
"{\\rtf1\\ansi\\ansicpg1252\\deff0\\deflang1033{\\fonttbl{\\f0\\fnil\\fcharset0 Times New Roman;}{\\f1\\froman\\fcharset0 Times New Roman;}{\\f2\\froman\\fprq2\\fcharset0 Times New Roman;}{\\f3\\fnil\\fcharset0 Microsoft Sans Serif;}{\\f4\\fswiss\\fcharset0 Arial;}}\r\n{\\colortbl ;\\red0\\green0\\blue0;}\r\n\\viewkind4\\uc1\\pard\\cf1\\ul\\b\\f0\\fs24 System.Diagnostics.EventLog\\par\r\n\\pard\\sb100\\sa100\\cf0\\ulnone\\b0\\f1 Write an event log entry when your VEE program encounters an error or warning situation. It can also be used to write information to the event log.  \\f2 It is a .NET Framework call and can be found in the Function and Object Browser here: \\f3\\fs17\\par\r\n\\pard\\b\\f2\\fs24\\par\r\nAssembly\\b0 : System\\par\r\n\\b Namespace\\b0 : System.Diagnostics\\par\r\n\\b Type\\b0 : EventLog\\f3\\fs17\\par\r\n\\f4\\fs20\\par\r\n}\r\n"
)
(transactions 1
"System.Diagnostics.EventLog.WriteEntry(source, message, System.Diagnostics.EventLogEntryType.Error)"
)
(parmInfo 4 "3" "T 0" "T 0" "T 0")
(memberInfos 1
"Void WriteEntry(System.String, System.String, System.Diagnostics.EventLogEntryType)"
)
(statics 1 "1")
(assemblyQualifiedName
"System.Diagnostics.EventLog, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
)
(objectName "eventLog"))
(interface
(input 1
(name "source")
(requires
(datatype Text)
(shape "Scalar"))
(lock name constraints)
(optional yes))
(input 2
(name "message")
(requires
(datatype Text)
(shape "Scalar"))
(lock name constraints)
(optional yes)))
(implementation))
(device 4 FORMULA
(properties
(name "errorInfo()")
(expr 1 "errorInfo()"))
(interface
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 5 TOSTRING
(properties
(transactions 5 "WRITE TEXT \"<ErrorNumber>\"+er.Number+\"</ErrorNumber>\""
"WRITE TEXT \"<ErrorMessage>\"+er.Message+\"</ErrorMessage>\""
"WRITE TEXT \"<ObjectTitle>\"+er.Title+\"</ObjectTitle>\""
"WRITE TEXT \"<ObjectType>\"+er.Type+\"</ObjectType>\""
"WRITE TEXT \"<MoreInfo>\"+moreInfo+\"</MoreInfo>\""))
(interface
(input 1
(name "er")
(optional yes))
(input 2
(name "moreInfo")
(optional yes))
(output 1
(name "result")
(lock name constraints)))
(implementation
(attr iopath string write "string"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 6 FORMULA
(properties
(name "programName()")
(expr 1 "basename(programName())"))
(interface
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 8 NOTE
(properties
(name "README")
(text2 1
"{\\rtf1\\ansi\\ansicpg1252\\deff0{\\fonttbl{\\f0\\fnil\\fcharset0 Times New Roman;}{\\f1\\froman\\fprq2\\fcharset0 Times New Roman;}{\\f2\\fnil\\fcharset0 Microsoft Sans Serif;}}\r\n{\\colortbl ;\\red0\\green0\\blue0;}\r\n\\viewkind4\\uc1\\pard\\cf1\\lang1033\\ul\\b\\f0\\fs24 Using the Write To Event Log Object\\par\r\n\\cf0\\ulnone\\b0\\f1\\par\r\nThis example demonstrates how to use the System menu \"Write to Event Log\" object to log VEE error information to the Application event log and then read those entries back out of the event log.  If this method on EventLog doesn\'t do exactly what you need check out the other methods on EventLog.\\par\r\n\\par\r\n\\b Assemblies\\b0 : mscorlib, System\\par\r\n\\b Namespaces\\b0 : System.Diagnostics\\par\r\n\\b Types\\b0 : System.Diagnostics.EventLog\\f2\\fs17\\par\r\n}\r\n"
)))
(device 12 FORMULA
(properties
(name "String.Concat(values);")
(expr 1 "System.String.Concat(a.More);"))
(interface
(input 1
(name "a")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 13 FORMULA
(properties
(name "Generate an error")
(expr 1
"Set obj  = CreateInstance(\"mscorlib\", \"System.TypeNameDoesNotExist\");"))
(interface
(output 1
(name "obj")
(optional yes))
(output 2
(type exception)
(name "Error")
(lock name constraints)
(optional yes))))
(device 15 DOTNETBUILDER
(properties
(name "Read Entries from EventLog")
(transactions 2
"eventLog = CreateInstance(\"System\", \"System.Diagnostics.EventLog\", \"Application\")"
"return = eventLog.Entries")
(parmInfo 7 "4" "T 0" "T 0" "T 0" "T 0" "1" "T 0")
(memberInfos 2 "Void .ctor(System.String)"
"System.Diagnostics.EventLogEntryCollection Entries")
(statics 2 "0" "0")
(assemblyQualifiedName
"System.Diagnostics.EventLog, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
)
(objectName "eventLog"))
(interface
(output 1
(name "eventLog")
(optional yes))
(output 2
(name "return")
(optional yes)))
(implementation))
(device 16 FOREACH
(properties
(name "For Each Element In"))
(interface
(input 1
(name "Collection")
(tag "Collection")
(lock name)
(optional yes))
(output 1
(name "Element")
(lock name constraints))))
(device 18 IFTHENELSE
(properties
(name "Was Entry written by this program?")
(cases 1 "entry.Source==source"))
(interface
(input 1
(name "entry")
(optional yes))
(input 2
(name "source")
(optional yes))
(output 1
(name "Then")
(lock name constraints))
(output 2
(name "Else")
(lock name constraints))))
(device 19 DOTNETBUILDER
(properties
(name "System.Diagnostics.EventLogEntry")
(transactions 1 "return = eventLogEntry.Message")
(parmInfo 2 "1" "T 0")
(memberInfos 1 "System.String Message")
(statics 1 "0")
(assemblyQualifiedName
"System.Diagnostics.EventLogEntry, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
)
(objectName "eventLogEntry"))
(interface
(input 1
(name "eventLogEntry")
(optional yes))
(output 1
(name "return")
(optional yes)))
(implementation))
(device 20 SCROLLINGTEXTDISPLAY
(properties
(logSize 256))
(interface
(input 1
(name "Data"))))
(configuration
(connect D3:1 D0:1)
(connect D2:1 D0:2)
(connect D6:2 D1:0)
(connect D1:1 D2:1)
(connect D5:1 D2:2)
(connect D1:1 D5:1)
(connect D0:0 D7:0)
(connect D7:2 D8:1)
(connect D8:1 D9:1)
(connect D3:1 D9:2)
(connect D9:1 D10:0)
(connect D8:1 D10:1)
(connect D10:1 D11:1)))
(contextCarrier
(wndOrigin 2 2)
(wndState res)
(active detail)
(detail
(extent 1066 740)
(anchorPt 4 -311)
(configuration
(devCarrierFor 0
(active open)
(icon
(extent 180 25))
(open
(extent 634 66))
(terminals on)
(pinCenter 850 370))
(devCarrierFor 4
(active icon)
(icon
(extent 59 15))
(open
(extent 104 50))
(terminals on)
(pinCenter 170 440))
(devCarrierFor 5
(active icon)
(icon
(extent 53 25))
(open
(extent 304 76))
(terminals on)
(pinCenter 410 390))
(devCarrierFor 6
(active icon)
(icon
(extent 97 15))
(open
(extent 184 56))
(terminals on)
(pinCenter 370 350))
(devCarrierFor 8
(active open)
(icon
(extent 68 51)
(iconImage "notepad.icn"))
(open
(extent 344 246)
(editing disabled))
(pinCenter 450 640))
(devCarrierFor 12
(active icon)
(icon
(extent 133 15))
(open
(extent 215 50))
(terminals on)
(pinCenter 290 440))
(devCarrierFor 13
(active icon)
(icon
(extent 106 34))
(open
(extent 434 66))
(terminals on)
(pinCenter 90 380))
(devCarrierFor 15
(active icon)
(icon
(extent 169 25))
(open
(extent 384 76))
(terminals on)
(pinCenter 90 670))
(devCarrierFor 16
(active icon)
(icon
(extent 122 51)
(iconImage "loop.icn"))
(open)
(pinCenter 120 790))
(devCarrierFor 18
(active icon)
(icon
(extent 207 25))
(open
(extent 150 51))
(terminals on)
(pinCenter 340 800))
(devCarrierFor 19
(active open)
(icon)
(open
(extent 229 74))
(terminals on)
(pinCenter 485 890))
(devCarrierFor 20
(active open)
(icon)
(open
(extent 354 166)
(noformatter))
(pinCenter 850 890))
(connect D3:1 D0:1
(points 2 421 350 460 350))
(connect D2:1 D0:2
(points 2 439 390 460 390))
(connect D6:2 D1:0
(points 3 145 390 170 390 170 430))
(connect D1:1 D2:1
(points 4 202 440 210 440 210 380 381 380))
(connect D5:1 D2:2
(points 4 359 440 370 440 370 400 381 400))
(connect D1:1 D5:1
(points 2 202 440 221 440))
(connect D0:0 D7:0
(points 4 830 405 830 480 90 480 90 655))
(connect D7:2 D8:1
(points 6 177 680 200 680 200 710 40 710 40 790 56 790))
(connect D8:1 D9:1
(points 2 183 790 234 790))
(connect D3:1 D9:2
(points 6 421 350 450 350 450 470 210 470 210 810 234 810))
(connect D9:1 D10:0
(points 3 446 790 460 790 460 832))
(connect D8:1 D10:1
(points 4 183 790 200 790 200 890 268 890))
(connect D10:1 D11:1
(points 2 652 890 670 890)))
(stackingOrder 3 1 5 2 0 10 7 4 8 11 6 9))
(numberFormats
(realFormat standard)
(realSigDigits 4)
(realRadixSpec 4)
(integerBase decimal))))
