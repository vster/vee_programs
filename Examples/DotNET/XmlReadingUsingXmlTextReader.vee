(saveFormat "7.0")
(date "Fri 01/Apr/2005 12:00:25 ")
(veerev "7.5.7516.3 Alpha")
(platform "PC")
(execMode v6)
(prefExecMode v9)
(filterNAN 0)
(workspaceStackingOrder M)
(SaveCF no)
(device 0 ROOTCONTEXT
(assemblyRefs
(assemblyRef 1
(displayName
"mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
)
(filename "C:\\WINDOWS\\Microsoft.NET\\Framework\\v1.1.4322\\mscorlib.dll"))
(assemblyRef 2
(displayName
"System.Xml, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
)
(filename "C:\\WINDOWS\\Microsoft.NET\\Framework\\v1.1.4322\\System.XML.dll"))
(selectedNamespaces "System.IO,System.Xml,"))
(properties
(trigMode deg)
(nextID 64)
(popupTitleText "Untitled")
(popupMoveable 1)
(deleteGlobals 0))
(deviceList
(device 7 LITERALCONSTANT
(properties
(name "XML"))
(interface
(output 1
(name "Text")
(lock name constraints)))
(implementation
(value Text
(numDims 1)
(size 46)
(data  [ "<?xml version=\"1.0\"?>"
"<!-- a fragment of a book store inventory database -->"
"<bookstore xmlns:bk=\"urn:samples\">"
"  <book genre=\"novel\" publicationdate=\"1997\" bk:ISBN=\"1-861001-57-8\">"
"    <title>Pride And Prejudice</title>" "    <author>"
"      <first-name>Jane</first-name>" "      <last-name>Austen</last-name>"
"    </author>" "    <price>24.95</price>" "  </book>"
"  <book genre=\"novel\" publicationdate=\"1992\" bk:ISBN=\"1-861002-30-1\">"
"    <title>The Handmaid\'s Tale</title>" "    <author>"
"      <first-name>Margaret</first-name>" "      <last-name>Atwood</last-name>"
"    </author>" "    <price>29.95</price>" "  </book>"
"  <book genre=\"novel\" publicationdate=\"1991\" bk:ISBN=\"1-861001-57-6\">"
"    <title>Emma</title>" "    <author>" "      <first-name>Jane</first-name>"
"      <last-name>Austen</last-name>" "    </author>" "    <price>19.95</price>"
"  </book>"
"  <book genre=\"novel\" publicationdate=\"1982\" bk:ISBN=\"1-861001-45-3\">"
"    <title>Sense and Sensibility</title>" "    <author>"
"      <first-name>Jane</first-name>" "      <last-name>Austen</last-name>"
"    </author>" "    <price>19.95</price>" "  </book>" "</bookstore>" "" "" ""
"" "" "" "" "" "" "" ]))
(initValue Text
(data  ""))))
(device 8 FORMULA
(properties
(name "Create StringReader")
(expr 1
"Set stringReader = CreateInstance(\"mscorlib\", \"System.IO.StringReader\", text);"
))
(interface
(input 1
(name "text")
(requires
(datatype Text)
(shape "Scalar"))
(optional yes))
(output 1
(name "stringReader")
(optional yes))
(output 2
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 19 TOSTRING
(properties
(transactions 1 "WRITE TEXT a STR EOL"))
(interface
(input 1
(name "a")
(optional yes))
(output 1
(name "result")
(lock name constraints)))
(implementation
(attr iopath string write "string"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 25 FORMULA
(properties
(name "Create XmlTextReader")
(expr 1
"Set xmlTextReader = CreateInstance(\"System.Xml\", \"System.Xml.XmlTextReader\", textReader);"
))
(interface
(input 1
(name "textReader")
(optional yes))
(output 1
(name "xmlTextReader")
(optional yes))
(output 2
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 26 FORMULA
(properties
(name "xmlTextReader.Read( );")
(expr 1 "xmlTextReader.Read( );"))
(interface
(input 1
(name "xmlTextReader")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 27 REPEATUNTILBREAK
(interface
(output 1
(name "Continuous")
(lock name constraints))))
(device 28 IFTHENELSE
(properties
(name "More Nodes?")
(cases 1 "A"))
(interface
(input 1
(name "A")
(optional yes))
(output 1
(name "Then")
(lock name constraints))
(output 2
(name "Else")
(lock name constraints))))
(device 29 BREAK)
(device 30 IFTHENELSE
(properties
(name "Is Element ?")
(cases 1 "A.Equals(XmlNodeType.Element)"))
(interface
(input 1
(name "A")
(optional yes))
(output 1
(name "Then")
(lock name constraints))
(output 2
(name "Else")
(lock name constraints))))
(device 31 FORMULA
(properties
(name "xmlTextReader.NodeType;")
(expr 1 "xmlTextReader.NodeType;"))
(interface
(input 1
(name "xmlTextReader")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 36 FORMULA
(properties
(name "xmlTextReader.AttributeCount;")
(expr 1 "xmlTextReader.AttributeCount;"))
(interface
(input 1
(name "xmlTextReader")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 37 FORMULA
(properties
(name "xmlTextReader.LocalName;")
(expr 1 "xmlTextReader.LocalName;"))
(interface
(input 1
(name "xmlTextReader")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 38 SCROLLINGTEXTDISPLAY
(properties
(logSize 256))
(interface
(input 1
(name "Data"))))
(device 40 TOSTRING
(properties
(transactions 1 "WRITE TEXT \" \"*depth*4+string EOL"))
(interface
(input 1
(name "string")
(optional yes))
(input 2
(name "depth")
(optional yes))
(output 1
(name "result")
(lock name constraints)))
(implementation
(attr iopath string write "string"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 41 FORMULA
(properties
(name "xmlTextReader.Depth;")
(expr 1 "xmlTextReader.Depth;"))
(interface
(input 1
(name "xmlTextReader")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 44 FORCOUNT
(properties
(name "Loop thru Attributes")
(count 0))
(interface
(input 1
(name "Count")
(tag "Count")
(requires
(datatype Int32)
(shape "Scalar"))
(lock constraints)
(optional yes)
(buffer YES))
(output 1
(name "Count")
(lock name constraints))))
(device 45 FORMULA
(properties
(name "xmlTextReader.GetAttribute(i);")
(expr 1 "xmlTextReader.GetAttribute(i);"))
(interface
(input 1
(name "xmlTextReader")
(optional yes))
(input 2
(name "i")
(requires
(datatype Int32)
(shape "Scalar"))
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 56 NOTE
(properties
(name "README")
(text2 1
"{\\rtf1\\ansi\\ansicpg1252\\deff0{\\fonttbl{\\f0\\fnil\\fcharset0 Times New Roman;}{\\f1\\froman\\fprq2\\fcharset0 Times New Roman;}{\\f2\\fnil\\fcharset0 Microsoft Sans Serif;}}\r\n{\\colortbl ;\\red0\\green0\\blue0;}\r\n\\viewkind4\\uc1\\pard\\cf1\\lang1033\\ul\\b\\f0\\fs24 Using XmlTextReader to Read XML and Obtain Element Nodes and Attributes Using System.Xml Namespace\\par\r\n\\cf0\\ulnone\\b0\\f1\\par\r\nThis example demonstrates how to read XML via a System.IO.StringReader although you can easily substitute a filename in the System.Xml.XmlTextReader constructor. The example walks each XmlNode. Nodes that correspond to XML elements (as opposed to Whitespace, Text, ProcessingInstruction, etc) get queried for their LocalName and then queried for attributes associated with the element node.\\par\r\n\\par\r\n\\b Assemblies\\b0 : mscorlib, System.Xml\\par\r\n\\b Namespaces\\b0 : System, System.IO, System.Xml\\par\r\n\\b Types\\b0 : System.IO.StringReader, System.Xml.XmlTextReader\\f2\\fs17\\par\r\n}\r\n"
)))
(device 57 DECLVAR
(properties
(name "Declare g_nodeStr")
(scope glob)
(globalName "g_nodeStr"))
(implementation
(value Text
(data  ""))))
(device 61 FORMULA
(properties
(name "Init g_nodeStr")
(expr 1 "g_nodeStr = A;"))
(interface
(input 1
(name "A")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 62 FORMULA
(properties
(name "Concat to g_nodeStr")
(expr 1 "g_nodeStr = g_nodeStr + \" \" +A;"))
(interface
(input 1
(name "A")
(optional yes))
(output 1
(name "Result")
(tag "Result")
(lock name constraints)
(optional yes))))
(device 63 FROMGLOBAL
(properties
(name "Get g_nodeStr")
(globalName "g_nodeStr"))
(interface
(output 1
(name "Data")
(tag "Data")
(lock name constraints))))
(configuration
(connect D2:1 D1:1)
(connect D0:1 D2:1)
(connect D1:1 D3:1)
(connect D5:1 D4:0)
(connect D3:1 D4:1)
(connect D3:0 D5:0)
(connect D4:1 D6:1)
(connect D6:2 D7:0)
(connect D9:1 D8:1)
(connect D6:1 D9:0)
(connect D3:1 D9:1)
(connect D14:0 D10:0)
(connect D3:1 D10:1)
(connect D8:1 D11:0)
(connect D3:1 D11:1)
(connect D21:1 D12:1)
(connect D11:1 D13:1)
(connect D14:1 D13:2)
(connect D11:0 D14:0)
(connect D3:1 D14:1)
(connect D10:1 D15:1)
(connect D3:1 D16:1)
(connect D15:1 D16:2)
(connect D13:1 D19:1)
(connect D16:1 D20:1)
(connect D15:0 D21:0)))
(contextCarrier
(wndOrigin 2 1)
(wndState res)
(active detail)
(detail
(extent 1063 743)
(anchorPt 86 6)
(configuration
(devCarrierFor 7
(active icon)
(icon
(extent 27 15))
(open
(extent 374 356))
(pinCenter 160 30))
(devCarrierFor 8
(active icon)
(icon
(extent 124 25))
(open
(extent 504 50))
(terminals on)
(pinCenter 370 30))
(devCarrierFor 19
(active icon)
(icon
(extent 53 15))
(open
(extent 229 74))
(terminals on)
(pinCenter 230 30))
(devCarrierFor 25
(active icon)
(icon
(extent 136 25))
(open
(extent 533 50))
(terminals on)
(pinCenter 370 110))
(devCarrierFor 26
(active icon)
(icon
(extent 141 15))
(open
(extent 179 50))
(terminals on)
(pinCenter 430 250))
(devCarrierFor 27
(active icon)
(icon
(extent 68 51)
(iconImage "loop.icn"))
(open)
(terminals on)
(pinCenter 370 180))
(devCarrierFor 28
(active icon)
(icon
(extent 81 25))
(open
(extent 50 51))
(terminals on)
(pinCenter 570 250))
(devCarrierFor 29
(active icon)
(icon
(extent 36 15))
(open)
(terminals on)
(pinCenter 730 300))
(devCarrierFor 30
(active icon)
(icon
(extent 75 25))
(open
(extent 275 51))
(terminals on)
(pinCenter 570 320))
(devCarrierFor 31
(active icon)
(icon
(extent 158 15))
(open
(extent 194 50))
(terminals on)
(pinCenter 430 320))
(devCarrierFor 36
(active icon)
(icon
(extent 181 15))
(open
(extent 215 50))
(terminals on)
(pinCenter 430 470))
(devCarrierFor 37
(active icon)
(icon
(extent 167 15))
(open
(extent 202 50))
(terminals on)
(pinCenter 430 390))
(devCarrierFor 38
(active open)
(icon)
(open
(extent 284 266)
(noformatter))
(pinCenter 870 530))
(devCarrierFor 40
(active icon)
(icon
(extent 53 25))
(open
(extent 229 74))
(terminals on)
(pinCenter 570 400))
(devCarrierFor 41
(active icon)
(icon
(extent 133 15))
(open
(extent 171 50))
(terminals on)
(pinCenter 430 430))
(devCarrierFor 44
(active icon)
(icon
(extent 116 51)
(iconImage "loop.icn"))
(open
(extent 152 31))
(pinCenter 430 550))
(devCarrierFor 45
(active icon)
(icon
(extent 178 25))
(open
(extent 212 50))
(terminals on)
(pinCenter 430 650))
(devCarrierFor 56
(active open)
(icon
(extent 68 51)
(iconImage "notepad.icn"))
(open
(extent 334 376)
(editing disabled))
(pinCenter 90 280))
(devCarrierFor 57
(active icon)
(icon
(extent 113 15))
(open
(extent 195 103))
(pinCenter 570 180))
(devCarrierFor 61
(active icon)
(icon
(extent 83 15))
(open
(extent 145 50))
(terminals on)
(pinCenter 670 400))
(devCarrierFor 62
(active icon)
(icon
(extent 123 15))
(open
(extent 204 50))
(terminals on)
(pinCenter 630 650))
(devCarrierFor 63
(active icon)
(icon
(extent 86 15))
(open
(extent 73 51))
(terminals on)
(pinCenter 640 530))
(connect D2:1 D1:1
(points 2 259 30 305 30))
(connect D0:1 D2:1
(points 2 176 30 201 30))
(connect D1:1 D3:1
(points 6 434 20 450 20 450 70 290 70 290 110 299 110))
(connect D5:1 D4:0
(points 3 406 180 430 180 430 240))
(connect D3:1 D4:1
(points 6 440 100 450 100 450 80 280 80 280 250 357 250))
(connect D3:0 D5:0
(points 2 370 125 370 152))
(connect D4:1 D6:1
(points 2 503 250 527 250))
(connect D6:2 D7:0
(points 3 613 260 730 260 730 290))
(connect D9:1 D8:1
(points 2 511 320 530 320))
(connect D6:1 D9:0
(points 5 613 240 630 240 630 290 430 290 430 310))
(connect D3:1 D9:1
(points 8 440 100 450 100 450 80 280 80 280 250 310 250 310 320 348 320))
(connect D14:0 D10:0
(points 2 430 440 430 460))
(connect D3:1 D10:1
(points 8 440 100 450 100 450 80 280 80 280 250 310 250 310 470 337 470))
(connect D8:1 D11:0
(points 5 610 310 630 310 630 360 430 360 430 380))
(connect D3:1 D11:1
(points 8 440 100 450 100 450 80 280 80 280 250 310 250 310 390 344 390))
(connect D21:1 D12:1
(points 2 685 530 725 530))
(connect D11:1 D13:1
(points 2 516 390 541 390))
(connect D14:1 D13:2
(points 4 499 430 520 430 520 410 541 410))
(connect D11:0 D14:0
(points 2 430 400 430 420))
(connect D3:1 D14:1
(points 8 440 100 450 100 450 80 280 80 280 250 310 250 310 430 361 430))
(connect D10:1 D15:1
(points 6 523 470 540 470 540 500 350 500 350 550 369 550))
(connect D3:1 D16:1
(points 8 440 100 450 100 450 80 280 80 280 250 310 250 310 640 338 640))
(connect D15:1 D16:2
(points 6 490 550 510 550 510 600 320 600 320 660 338 660))
(connect D13:1 D19:1
(points 2 599 400 626 400))
(connect D16:1 D20:1
(points 2 521 650 566 650))
(connect D15:0 D21:0
(points 6 430 578 430 610 550 610 550 500 640 500 640 520)))
(stackingOrder 5 4 11 14 10 9 7 15 6 16 1 0 2 19 21 13 8 18 12 20 17 3))
(numberFormats
(realFormat standard)
(realSigDigits 4)
(realRadixSpec 4)
(integerBase decimal))))
