long __stdcall CloseDriver(long hDriver, long lParam1, long lParam2);
long __stdcall DefDriverProc(long dwDriverIdentifier, long hdrvr, long uMsg, long lParam1, long lParam2);
long __stdcall DrvGetModuleHandle(long hDriver);
long __stdcall GetDriverModuleHandle(long hDriver);
long __stdcall OpenDriver(char* szDriverName, char* szSectionName, long lParam2);
long __stdcall PlaySoundA(char* lpszName, long hModule, long dwFlags);
long __stdcall SendDriverMessage(long hDriver, long message, long lParam1, long lParam2);
long __stdcall auxGetNumDevs(void);
long __stdcall auxGetVolume(long uDeviceID, long* lpdwVolume);
long __stdcall auxOutMessage(long uDeviceID, long msg, long dw1, long dw2);
long __stdcall auxSetVolume(long uDeviceID, long dwVolume);
long __stdcall joyGetNumDev(void);
long __stdcall joyGetThreshold(long id, long* lpuThreshold);
long __stdcall joyReleaseCapture(long id);
long __stdcall joySetCapture(long hwnd, long uID, long uPeriod, long bChanged);
long __stdcall joySetThreshold(long id, long uThreshold);
long __stdcall mciExecute(char* lpstrCommand);
long __stdcall mciGetCreatorTask(long wDeviceID);
long __stdcall mciGetDeviceIDA(char* lpstrName);
long __stdcall mciGetDeviceIDFromElementIDA(long dwElementID, char* lpstrType);
long __stdcall mciGetErrorStringA(long dwError, char* lpstrBuffer, long uLength);
long __stdcall mciGetYieldProc(long mciId, long* pdwYieldData);
long __stdcall mciSendStringA(char* lpstrCommand, char* lpstrReturnString, long uReturnLength, long hwndCallback);
long __stdcall mciSetYieldProc(long mciId, long fpYieldProc, long dwYieldData);
long __stdcall midiInClose(long hMidiIn);
long __stdcall midiInGetErrorTextA(long err, char* lpText, long uSize);
long __stdcall midiInGetID(long hMidiIn, long* lpuDeviceID);
long __stdcall midiInGetNumDevs(void);
long __stdcall midiInMessage(long hMidiIn, long msg, long dw1, long dw2);
long __stdcall midiInOpen(long* lphMidiIn, long uDeviceID, long dwCallback, long dwInstance, long dwFlags);
long __stdcall midiInReset(long hMidiIn);
long __stdcall midiInStart(long hMidiIn);
long __stdcall midiInStop(long hMidiIn);
long __stdcall midiOutCacheDrumPatches(long hMidiOut, long uPatch, long* lpKeyArray, long uFlags);
long __stdcall midiOutCachePatches(long hMidiOut, long uBank, long* lpPatchArray, long uFlags);
long __stdcall midiOutClose(long hMidiOut);
long __stdcall midiOutGetErrorTextA(long err, char* lpText, long uSize);
long __stdcall midiOutGetID(long hMidiOut, long* lpuDeviceID);
long __stdcall midiOutGetVolume(long uDeviceID, long* lpdwVolume);
long __stdcall midiOutMessage(long hMidiOut, long msg, long dw1, long dw2);
long __stdcall midiOutOpen(long* lphMidiOut, long uDeviceID, long dwCallback, long dwInstance, long dwFlags);
long __stdcall midiOutReset(long hMidiOut);
long __stdcall midiOutSetVolume(long uDeviceID, long dwVolume);
long __stdcall midiOutShortMsg(long hMidiOut, long dwMsg);
long __stdcall midiStreamClose(long hms);
long __stdcall midiStreamOpen(long* phms, long* puDeviceID, long cMidi, long dwCallback, long dwInstance, long fdwOpen);
long __stdcall midiStreamPause(long hms);
long __stdcall midiStreamRestart(long hms);
long __stdcall midiStreamStop(long hms);
long __stdcall mixerClose(long hmx);
long __stdcall mixerGetID(long hmxobj, long* pumxID, long fdwId);
long __stdcall mixerGetNumDevs(void);
long __stdcall mixerMessage(long hmx, long uMsg, long dwParam1, long dwParam2);
long __stdcall mixerOpen(long* phmx, long uMxId, long dwCallback, long dwInstance, long fdwOpen);
long __stdcall mmioClose(long hmmio, long uFlags);
long __stdcall mmioFlush(long hmmio, long uFlags);
long __stdcall mmioRead(long hmmio, char* pch, long cch);
long __stdcall mmioSeek(long hmmio, long lOffset, long iOrigin);
long __stdcall mmioSendMessage(long hmmio, long uMsg, long lParam1, long lParam2);
long __stdcall mmioSetBuffer(long hmmio, char* pchBuffer, long cchBuffer, long uFlags);
long __stdcall mmioStringToFOURCCA(char* sz, long uFlags);
long __stdcall mmioWrite(long hmmio, char* pch, long cch);
long __stdcall mmsystemGetVersion(void);
long __stdcall sndPlaySoundA(char* lpszSoundName, long uFlags);
long __stdcall timeBeginPeriod(long uPeriod);
long __stdcall timeEndPeriod(long uPeriod);
long __stdcall timeGetTime(void);
long __stdcall timeKillEvent(long uID);
long __stdcall timeSetEvent(long uDelay, long uResolution, long lpFunction, long dwUser, long uFlags);
long __stdcall waveInClose(long hWaveIn);
long __stdcall waveInGetErrorTextA(long err, char* lpText, long uSize);
long __stdcall waveInGetID(long hWaveIn, long* lpuDeviceID);
long __stdcall waveInGetNumDevs(void);
long __stdcall waveInMessage(long hWaveIn, long msg, long dw1, long dw2);
long __stdcall waveInReset(long hWaveIn);
long __stdcall waveInStart(long hWaveIn);
long __stdcall waveInStop(long hWaveIn);
long __stdcall waveOutBreakLoop(long hWaveOut);
long __stdcall waveOutClose(long hWaveOut);
long __stdcall waveOutGetErrorTextA(long err, char* lpText, long uSize);
long __stdcall waveOutGetID(long hWaveOut, long* lpuDeviceID);
long __stdcall waveOutGetNumDevs(void);
long __stdcall waveOutGetPitch(long hWaveOut, long* lpdwPitch);
long __stdcall waveOutGetPlaybackRate(long hWaveOut, long* lpdwRate);
long __stdcall waveOutGetVolume(long uDeviceID, long* lpdwVolume);
long __stdcall waveOutMessage(long hWaveOut, long msg, long dw1, long dw2);
long __stdcall waveOutPause(long hWaveOut);
long __stdcall waveOutReset(long hWaveOut);
long __stdcall waveOutRestart(long hWaveOut);
long __stdcall waveOutSetPitch(long hWaveOut, long dwPitch);
long __stdcall waveOutSetPlaybackRate(long hWaveOut, long dwRate);
long __stdcall waveOutSetVolume(long uDeviceID, long dwVolume);
short __stdcall midiOutGetNumDevs(void);
