(saveFormat "2.3")
(date "Mon 08/May/2000 15:00:35 MDT")
(veerev "6.0")
(platform "HP9000s700")
(execMode v6)
(prefExecMode v9)
(filterNAN 0)
(workspaceStackingOrder M)
(SaveCF no)
(device 0 ROOTCONTEXT
(properties
(trigMode deg)
(nextID 16)
(popupTitleText "Optimize 2 Example")
(popupMoveable 1)
(popupTitleTextColor "Black")
(popupTitleBackgroundColor "Gray")
(deleteGlobals 0))
(deviceList
(device 0 FORCOUNT
(properties
(description2 5 "This iterator is used to access, in turn, each"
"of the rows of the Allocated Real array.  As"
"each row number is output, the column iterator"
"iterates through each of the column numbers while"
"data is read from the file into the array.")
(count 7))
(interface
(input 1
(name "Count")
(tag "Count")
(requires
(datatype Int32)
(shape "Scalar"))
(lock constraints)
(optional yes)
(buffer YES))
(output 1
(lock name constraints))))
(device 1 FORCOUNT
(properties
(description2 9 "This iterator indexes through the columns of"
"the previously selected row.  Note that the"
"column number is also used to activate the"
"Sequence in pin on the From File to cause it"
"to read the next data value from the file that"
"corresponds to the current row and column" "indices." "" "")
(count 4))
(interface
(input 1
(name "Count")
(tag "Count")
(requires
(datatype Int32)
(shape "Scalar"))
(lock constraints)
(optional yes)
(buffer YES))
(output 1
(lock name constraints))))
(device 2 FROMFILE
(properties
(name "From File - Read each element")
(description2 6 "Each real number is read from the data file, "
"using white space as separators.  This READ"
"operation pays no attention to the arrangement"
"of the data -- the values could be just one" "long line or one value per line."
"")
(transactions 1 "READ TEXT x REAL64"))
(interface
(output 1
(name "X")
(optional yes)))
(implementation
(attr iopath file read "~installDir/examples/Concepts/opt2.dat"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 3 TOSTRING
(properties
(description2 7 "Although the AlphaNumeric display will display"
"the resulting 2D array, the ToString object is"
"used to reformat each row of the output as one"
"text string, with data separated by a few spaces." ""
"The result is a 1D array of text strings, each"
"element representing one row of the output array.")
(transactions 1 "WRITE TEXT a"))
(interface
(input 1
(name "A")
(optional yes))
(output 1
(name "result")
(lock name constraints)))
(implementation
(attr iopath string write "string"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField dataOnly)
(arrayFormat block))))
(device 4 ALLOCATEARRAY
(properties
(name "Alloc Real Array")
(description2 5 "This device generates an empty array of Real"
"numbers according to the numrow and numcol"
"inputs.  The resulting 2-D array is used by"
"the Set Values object to place each of the"
"data items being read from the data file."))
(interface
(input 1
(name "Dim Size 1")
(tag "Dim Size 1")
(requires
(datatype Int32)
(shape "Scalar"))
(lock constraints)
(optional yes)
(buffer YES))
(input 2
(name "Dim Size 2")
(tag "Dim Size 2")
(requires
(datatype Int32)
(shape "Scalar"))
(lock constraints)
(optional yes)
(buffer YES))
(output 1
(name "Array")
(tag "Array")))
(implementation
(numDims 2)
(dimSizes "7" "4")
(type "Real64")
(initEnum "Init Value")
(initialValue
(data  0))
(from 1)
(thru 10)))
(device 5 TEXTDISPLAY
(interface
(input 1
(name "Data"))))
(device 6 TOSTRING
(properties
(description2 8 "Although the AlphaNumeric display will display"
"the resulting 2D array, the ToString object is"
"used to reformat each row of the output as one"
"text string, with data separated by a few spaces." ""
"The result is a 1D array of text strings, each"
"element representing one row of the output array." "")
(transactions 1 "WRITE TEXT a"))
(interface
(input 1
(name "A")
(optional yes))
(output 1
(name "result")
(lock name constraints)))
(implementation
(attr iopath string write "string"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField dataOnly)
(arrayFormat block))))
(device 7 FROMFILE
(properties
(name "From File - Read array size")
(description2 9 "The first line of the data file has two integers"
"that define the number of rows and number of "
"columns of the data in the file.  " ""
"We REWIND the file first, since all instances of"
"From File that share the same file name will also"
"share the same read pointer.  We want to insure"
"the read starts at the first of the file, although"
"rewinding is not needed in this example.")
(transactions 2 "EXECUTE REWIND" "READ TEXT numrow, numcol REAL64"))
(interface
(output 1
(name "numrow")
(optional yes))
(output 2
(name "numcol")
(optional yes)))
(implementation
(attr iopath file read "~installDir/examples/Concepts/opt2.dat"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 8 CONTEXT
(properties
(name "Press For")
(trigMode deg)
(nextID 3))
(deviceList
(device 0 TOGGLE25
(properties
(name "Info About")
(autoTrigger 1))
(interface
(input 1
(type control)
(name "Reset")
(lock name constraints)
(optional yes))
(output 1
(lock name constraints)))
(implementation
(value Int32
(data  0))
(initValue Int32
(data  0))))
(device 1 IFTHENELSE
(properties
(name "!= 0")
(cases 1 "a!=0"))
(interface
(input 1
(name "A")
(optional yes))
(output 1
(name "Then")
(lock name constraints))
(output 2
(name "Else")
(lock name constraints))))
(device 2 CONTEXT
(properties
(name "Info About this Example")
(trigMode deg)
(nextID 2)
(popupMoveable 1))
(deviceList
(device 0 CONFIRM25
(properties
(name "DONE"))
(interface
(output 1
(name "Go")
(lock name constraints)))
(implementation))
(device 1 NOTE
(properties
(name "notepad")
(text2 31 "PURPOSE:     Reading a 2 dimensioned array of data from a file." ""
"USER INPUT REQUIRED:  Press RUN and look at the data displays from both of"
"             the methods. Each device has a Show Description selection to"
"             provide additional detail." ""
"EXPLANATION: The problem is to efficiently read in a variable 2-D array"
"             of data from a file.  The example file (opt2.dat) is as follows:"
"             7  4" "             11 12 13 14" "             21 22 23 24"
"             31 32 33 34" "             41 42 43 44" "             51 52 53 54"
"             61 62 63 64" "             71 72 73 74" ""
"             The first method uses a From File to read the # rows (7) and"
"             # cols (4) from the file.  Using nested loops, the successive"
"             array indices are computed and a data value is read From File"
"             and inserted into the Array. When all data is read, the Build"
"             Array output is displayed." ""
"             The second method uses two features to simplify the task.  One"
"             FromFile device is used to first rewind the file, then read the"
"             data size, and finally read all the data.  Note that the array"
"             indices on the first line of the data file are read and sent to"
"             two output data pins (numrow and numcol).  Although the outputs"
"             are not used, these \"variables\" are used in the next transaction"
"             in the count field where they specify reading a 2-D array into X."
"             The size of the array is numrows by numcolumns.")))
(configuration)
(ShowOnExecPanel
(relativeOrigin 240 47)))
(contextCarrier
(active panel)
(panel
(extent 729 589)
(gridSize 4)
(widget 0 detail
(relativeOrigin 312 548)
(title off)
(borderStyle none)
(extent 80 30))
(widget 1 detail
(relativeOrigin 0 0)
(title off)
(borderStyle none)
(extent 730 540)
(editing disabled)))
(detail
(extent 351 200)
(anchorPt 137 142)
(configuration
(devCarrierFor 0
(active open)
(icon)
(open
(extent 58 37))
(title off)
(pinCenter 0 0))
(devCarrierFor 1
(active icon)
(icon
(extent 78 25))
(open
(extent 727 525)
(editing enabled))
(pinCenter 8 -82)))
(stackingOrder 0 1))))
(configuration
(connect D2:0 D0:1)
(connect D0:1 D1:1)
(connect D1:1 D2:0)))
(contextCarrier
(active detail)
(panel
(extent 245 74)
(widget 0 detail
(relativeOrigin 60 13)
(title off)
(borderStyle none)
(extent 118 43)
(scaled on)
(format button)))
(detail
(extent 496 273)
(anchorPt 113 72)
(configuration
(devCarrierFor 0
(active open)
(icon)
(open
(extent 114 39)
(scaled on)
(format button))
(title off)
(pinCenter 0 0))
(devCarrierFor 1
(active icon)
(icon
(extent 46 25))
(open
(extent 73 64))
(terminals on)
(pinCenter 130 0))
(devCarrierFor 2
(active icon)
(icon
(extent 217 25))
(open
(extent 860 598)
(carbonCopy))
(bg "Light Blue Gray")
(pinCenter 230 70))
(connect D2:0 D0:1
(points 5 230 85 230 100 -80 100 -80 0 -60 0))
(connect D0:1 D1:1
(points 2 59 0 104 0))
(connect D1:1 D2:0
(points 3 155 -10 230 -10 230 55)))
(stackingOrder 0 1 2))))
(device 9 NOTE
(properties
(name "The Complex Method:")
(text2 1 "")))
(device 10 FROMFILE
(properties
(description2 26 "This example uses the From File to to the entire"
"read operation.  First, we rewind the data file,"
"since it shares the same file pointer as the"
"first method. (If we didn\'t we would get EOF on" "the first read attempt.)."
"" "The next transaction reads the first two real"
"numbers from the datafile into numrow and numcol"
"output pins.  Note that we need not use the data"
"sent to the pins outside the From File object;" ""
"The third transaction reads the entire array from"
"the datafile using the COUNT parameter to define"
"the shape of the array (i.e., COUNT n,m means 2D"
"array, n,m,l means 3D, etc.).  The actual values"
"of the COUNT parameter are taken from the data"
"previously read into the numrow and numcol output" "pins.  " ""
"It is generally true that data READ into an output"
"pin can be used by subsequent transactions any"
"place a number would be allowed.  Although not"
"illustrated in this example, a data Input pin "
"could be added to the From File device to allow"
"another device to specify the COUNT parameters." "")
(transactions 3 "EXECUTE REWIND" "READ TEXT numrow, numcol REAL64"
"READ TEXT x REAL64 ARRAY:numrow, numcol"))
(interface
(output 1
(name "numrow")
(optional yes))
(output 2
(name "numcol")
(optional yes))
(output 3
(name "X")
(optional yes)))
(implementation
(attr iopath file read "~installDir/examples/Concepts/opt2.dat"
(readTerm "\n")
(fs " ")
(eol "\n")
(multiField fullSyntax)
(arrayFormat block))))
(device 11 TEXTDISPLAY
(interface
(input 1
(name "Data"))))
(device 12 NOTE
(properties
(name "The Optimum Method:")
(text2 1 "")))
(device 13 TOARRAY
(properties
(description2 12 "Using the allocated, but empty array, of the"
"correct size, we use the Set Values device to"
"place each element as it is read from the data"
"file.  The I and J indexes, generated by the"
"For Count iterators, indicate the array position" "for each data item." ""
"After all data as been \"inserted\" into the array,"
"the XEQ pin is activated to send the completed"
"array to the display, using the ToString device"
"to format the output so it will fit on the display." "")
(numDims 2))
(interface
(input 1
(name "Array")
(tag "Array")
(lock constraints))
(input 2
(name "Datum")
(tag "Datum")
(requires
(shape "Scalar"))
(lock constraints))
(input 3
(name "Index 1")
(tag "Index 1")
(requires
(datatype Int32)
(shape "Scalar"))
(lock constraints))
(input 4
(name "Index 2")
(tag "Index 2")
(requires
(datatype Int32)
(shape "Scalar"))
(lock constraints))
(input 5
(type trigger)
(name "XEQ")
(lock name constraints))
(output 1
(name "Array")
(tag "Array")))
(implementation))
(device 14 NOTE
(properties
(name "Warranty Disclaimer")
(text2 4 "This example is provided as an"
"illustration \"as is\", and Keysight Technologies"
"makes no warranty of any kind" "with regard to this example.")))
(device 15 NOTE
(properties
(name "To Operate:")
(text2 4 "Press RUN and then" "look at examples, or" "press Info About for"
"additional help.")))
(configuration
(connect D7:1 D0:1)
(connect D0:1 D1:0)
(connect D7:2 D1:1)
(connect D1:1 D2:0)
(connect D13:1 D3:1)
(connect D7:1 D4:1)
(connect D7:2 D4:2)
(connect D6:1 D5:1)
(connect D10:3 D6:1)
(connect D11:0 D10:0)
(connect D3:1 D11:1)
(connect D4:1 D13:1)
(connect D2:1 D13:2)
(connect D0:1 D13:3)
(connect D1:1 D13:4)
(connect D0:0 D13:5)))
(contextCarrier
(wndRestoredOrigin 2 2)
(wndRestoredExtent 812 615)
(wndState max)
(active detail)
(detail
(extent 703 407)
(anchorPt 629 203)
(configuration
(devCarrierFor 0
(active icon)
(icon
(extent 74 54)
(iconImage "loop.icn"))
(open
(extent 165 34))
(pinCenter -40 -50))
(devCarrierFor 1
(active icon)
(icon
(extent 74 54)
(iconImage "loop.icn"))
(open
(extent 165 34))
(pinCenter -60 40))
(devCarrierFor 2
(active open)
(icon
(extent 271 25))
(open
(extent 419 68))
(terminals on)
(pinCenter -380 150))
(devCarrierFor 3
(active icon)
(icon
(extent 85 25))
(open
(extent 202 55))
(terminals on)
(pinCenter -60 160))
(devCarrierFor 4
(active icon)
(icon
(extent 124 25))
(open
(extent 230 125))
(terminals on)
(pinCenter -40 -110))
(devCarrierFor 5
(active open)
(icon)
(open
(extent 134 116))
(pinCenter 100 330))
(devCarrierFor 6
(active icon)
(icon
(extent 87 25))
(open
(extent 202 55))
(terminals on)
(pinCenter -60 330))
(devCarrierFor 7
(active open)
(icon
(extent 253 25))
(open
(extent 389 85))
(terminals on)
(pinCenter -395 20))
(devCarrierFor 8
(active open)
(icon
(extent 110 25))
(open
(extent 217 72)
(carbonCopy))
(bg "Light Blue Gray")
(pinCenter -510 -140))
(devCarrierFor 9
(active icon)
(icon
(extent 181 25))
(open
(extent 274 25)
(editing enabled))
(pinCenter -530 -70))
(devCarrierFor 10
(active open)
(icon
(extent 110 25))
(open
(extent 389 98))
(terminals on)
(pinCenter -395 340))
(devCarrierFor 11
(active open)
(icon)
(open
(extent 134 116))
(pinCenter 100 160))
(devCarrierFor 12
(active icon)
(icon
(extent 181 25))
(open
(extent 274 25)
(editing enabled))
(pinCenter -530 240))
(devCarrierFor 13
(active icon)
(icon
(extent 94 63)
(iconImage "build.icn"))
(open
(extent 158 254))
(terminals on)
(pinCenter 100 -50))
(devCarrierFor 14
(active icon)
(icon
(extent 338 48)
(iconImage "disclaim.gif")
(label off))
(open
(extent 381 86)
(editing disabled))
(pinCenter -10 -160))
(devCarrierFor 15
(active open)
(icon
(extent 110 64)
(iconImage "notepad.icn"))
(open
(extent 197 85)
(editing disabled))
(pinCenter -290 -130))
(connect D7:1 D0:1
(points 4 -128 0 -120 0 -120 -50 -80 -50))
(connect D0:1 D1:0
(points 5 -1 -50 20 -50 20 0 -60 0 -60 10))
(connect D7:2 D1:1
(points 2 -128 40 -100 40))
(connect D1:1 D2:0
(points 5 -21 40 0 40 0 90 -380 90 -380 95))
(connect D13:1 D3:1
(points 8 149 -50 170 -50 170 10 10 10 10 100 -120 100 -120 160 -105 160))
(connect D7:1 D4:1
(points 4 -128 0 -120 0 -120 -120 -105 -120))
(connect D7:2 D4:2
(points 6 -128 40 -120 40 -120 10 -110 10 -110 -100 -105 -100))
(connect D6:1 D5:1
(points 2 -14 330 30 330))
(connect D10:3 D6:1
(points 4 -128 370 -120 370 -120 330 -106 330))
(connect D11:0 D10:0
(points 4 100 220 100 230 -380 230 -375 270))
(connect D3:1 D11:1
(points 2 -15 160 30 160))
(connect D4:1 D13:1
(points 4 24 -110 40 -110 40 -70 50 -70))
(connect D2:1 D13:2
(points 8 -138 150 -110 150 -110 110 20 110 20 60 30 60 30 -60 50 -60))
(connect D0:1 D13:3
(points 2 -1 -50 50 -50))
(connect D1:1 D13:4
(points 4 -21 40 40 40 40 -40 50 -40))
(connect D0:0 D13:5
(points 5 -40 -21 -40 -10 10 -10 10 -30 50 -30)))
(stackingOrder 12 3 8 15 9 2 0 4 13 1 11 6 5 14 7 10))
(numberFormats
(realFormat standard)
(realSigDigits 4)
(realRadixSpec 4)
(integerBase decimal))))
